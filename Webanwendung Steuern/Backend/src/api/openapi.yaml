openapi: 3.1.0
info:
    title: Steuerwebpage
    version: '1.0'
    description: >-
        Die Steuer-App nutzt einen simplen REST-Webservices zur Kommunikation mit dem Backend. Dieser
        ermöglicht die üblichen CRUD-Operationen zur Suche, Anzeige, und erstellung von Steuerjahren, wobei
        jedes Steuerjahr aus einem jahr, werbungskosten besteht.
    contact:
        name: 'Dominik Hoffmann, Max Müller, Christoph Halberstadt'
    license:
        name: CC-BY-4.0
        url: 'https://creativecommons.org/licenses/by/4.0/deed.de'
servers:
    -
        url: 'http://localhost:3000'
paths:
    /:
        get:
            tags:
                - Index
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/HATEOAS_Collection'
                                x-content-type: application/json
                    description: OK
            operationId: index
            summary: Wurzeladresse des Webservices
            description: Liefert eine HATEOAS-Übersicht aller collections
    /user:
        summary: Path used to manage the list of users.
        description: >-
            The REST endpoint/path used to list and create zero or more `User` entities.  This path contains a
            `POST` operation to perform the list and create tasks, respectively.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            tags:
                - User
            responses:
                '201':
                    headers:
                        Location:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: Created User
            operationId: createUser
            summary: Create a User
            description: Creates a new instance of a `User`.
    /user/login:
        summary: Path used to login the user
        description: >-
            The REST endpoint/path used to login the user
        post:
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginUser'
            tags:
                - User
            responses:
                '200':
                    headers:
                        Location:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: Login User
                '400':
                    description: Failed to retieve userdata
            operationId: loginUser
            summary: loggt einen User ein 
            description: Übergabe von Username und Password um ID zurück zu liefern
    /steuerjahr:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Steuerdaten'
            tags:
                - Steuerjahr
            responses:
                '201':
                    headers:
                        Location:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Steuerjahr'
                    description: Created
            operationId: createSteuerjahr
            summary: Steuerjahr anlegen
            description: >-
                Neues STeuerjahr anlegen. Speichert das übergebene Steuerjahr in der Datenbank. Der Wert des
                Feldes "user_id" nimmt die des Feldes _id des Users.
    '/steuerjahr/{user_id}/{jahr}':
        get:
            tags:
                - Steuerjahr
            parameters:
                -
                    style: simple
                    explode: false
                    name: user_id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    style: simple
                    explode: false
                    name: jahr
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Steuerjahr'
                    description: OK
                '404':
                    description: Not Found
            operationId: getSteuerjahr
            summary: Adresse lesen
            description: Liest eine einzelne Adresse vom Server.
    /graphen:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Graphendaten'
            tags:
                - Graphen
            responses:
                '201':
                    headers:
                        Location:
                            schema:
                                type: string
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Stampdaten'
                    description: Created
            operationId: createGraphendaten
            summary: Steuerjahr anlegen
            description: >-
                Neues STeuerjahr anlegen. Speichert das übergebene Steuerjahr in der Datenbank. Der Wert des
                Feldes "user_id" nimmt die des Feldes _id des Users.
    '/graphen/{user_id}':
        get:
            tags:
                - Graphen
            parameters:
                -
                    style: simple
                    explode: false
                    name: user_id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GraphenArray'
                    description: OK
                '404':
                    description: Not Found
            operationId: getGraphendaten
            summary: Adresse lesen
            description: Liest eine einzelne Adresse vom Server.
components:
    schemas:
        HATEOAS_Collection:
            title: HATEOAS-Links einer Collection
            type: object
            properties:
                _name:
                    type: string
                query:
                    $ref: '#/components/schemas/HATEOAS_Link'
                create:
                    $ref: '#/components/schemas/HATEOAS_Link'
        HATEOAS_Resource:
            title: HATEOAS-Links einer Resource
            type: object
            properties:
                read:
                    $ref: '#/components/schemas/HATEOAS_Link'
                update:
                    $ref: '#/components/schemas/HATEOAS_Link'
                patch:
                    $ref: '#/components/schemas/HATEOAS_Link'
                delete:
                    $ref: '#/components/schemas/HATEOAS_Link'
        HATEOAS_Link:
            title: HATEOAS-Link
            type: object
            properties:
                url:
                    type: string
                method:
                    type: string
                query_params:
                    type: array
                    items:
                        type: string
        Steuerjahr:
            title: Steuerjahr
            required: []
            type: object
            properties:
                _links:
                    $ref: '#/components/schemas/HATEOAS_Resource'
                user_id:
                    type: string
                jahr:
                    type: number
                werbungskosten:
                    type: number
            example:
                user_id: 6420557cd5033a24fc6777aa
                jahr: 2000
                werbungskosten: 15000
        Steuerdaten:
            title: Steuerdaten
            required: []
            type: object
            properties:
                _links:
                    $ref: '#/components/schemas/HATEOAS_Resource'
                user_id:
                    type: string
                jahr:
                    type: number
                kosten:
                    type: number
                fahrtweg:
                    type: number
            example:
                user_id: 6420557cd5033a24fc6777aa
                jahr: 2000
                kosten: 15000
                fahrtweg: 20
        User:
            description: |-
                Ein User hat einen Username und ein passwort mit dem er sich anmelden kann
                    Jeder user besitzt eine zusammenfassende Statistik die alle Steuerjahre und 
                    alle Verdienste zusammenfassen kann.
                    Ein User besitzt beliebig viele Steuerjahre in denen für das entsprechende Jahr
                    die Werbungskosten eingetragen werden können.
                    Ein User besitzt beliebig viele Verdienste die er zusammenfassend für jedes Jahr
                    eintragen kann.
            required: []
            type: object
            properties:
                username:
                    description: name der vom User zur anmeldung angelegt wurde
                    type: string
                password:
                    description: passwort um sich mit dem username anmelden zu können
                    type: string
                _id:
                    description: the Id of an user in mongo db
                    type: string
                _links:
                    $ref: '#/components/schemas/HATEOAS_Resource'
            example:
                _id: wHFBHLWlhfwbffbssu56ug
                username: MaxMustermann
                password: geheimesPasswort
        LoginUser:
            description: |-
                Ein User hat einen Username und ein passwort mit dem er sich anmelden kann
            type: object
            properties:
                username:
                    description: name der vom User zur anmeldung angelegt wurde
                    type: string
                password:
                    description: passwort um sich mit dem username anmelden zu können
                    type: string
                _links:
                    $ref: '#/components/schemas/HATEOAS_Resource'
            example:
                username: MaxMustermann
                password: geheimesPasswort
        Graphendaten:
            title: Graphendaten
            required: []
            type: object
            properties:
                _links:
                    $ref: '#/components/schemas/HATEOAS_Resource'
                user_id:
                    type: string
                jahr:
                    type: number
                werbungskosten:
                    type: number
            example:
                user_id: 6420557cd5033a24fc6777aa
                jahr: 2000
                werbungskosten: 15000
        GraphenArray: 
            type: array
            items: 
                type: number
        Stampdaten: 
            type: object
            properties:
                user_id: 
                    type: string
                heutedatum: 
                    type: string
tags:
    -
        name: Index
    -
        name: Steuerjahr
    -
        name: User
    -
        name: Graphen
