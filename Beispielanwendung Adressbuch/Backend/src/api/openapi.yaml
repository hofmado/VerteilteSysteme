openapi: 3.1.0
info:
    title: Steuerberechnung
    version: '1.0'
    description: >-
        Die Adressbuch-App nutzt einen simplen REST-Webservices zur Kommunikation mit dem Backend. Dieser
        ermöglicht die üblichen CRUD-Operationen zur Suche, Anzeige, Bearbeitung und Löschung von Adressen,
        wobei jede Adresse aus einem Vornamen, Nachnamen, Telefonnummer und eine E-Mailadresse besteht.
    contact:
        name: Gruppe Steuerabsetzen
        url: 'https://www.karlsruhe.dhbw.de/startseite.html'
        email: dominik.r.hoffmann@gmail.com
    license:
        name: CC-BY-4.0
        url: 'https://creativecommons.org/licenses/by/4.0/deed.de'
servers:
    -
        url: 'http://localhost:3000'
paths:
    /:
        get:
            tags:
                - Index
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/HATEOAS_Collection'
                                x-content-type: application/json
                    description: OK
            operationId: index
            summary: Wurzeladresse des Webservices
            description: Liefert eine HATEOAS-Übersicht aller collections
    /user:
        summary: Path used to manage the list of users.
        description: >-
            The REST endpoint/path used to list and create zero or more `User` entities.  This path contains a
            `GET` and `POST` operation to perform the list and create tasks, respectively.
        post:
            requestBody:
                description: A new `User` to be created.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                        examples:
                            User:
                                value:
                                    username: MusterMAx
                                    password: '1'
                required: true
            tags:
                - username
                - password
                - _id
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            examples:
                                _id:
                                    value: '"xxehfohjiwowio45jiiwe"'
                    description: Successful response.
                '400':
                    description: No Username or password received
            operationId: createUser
            summary: Create a User
            description: Creates a new instance of a `User`.
        parameters:
            -
                name: password
                description: ''
                schema:
                    type: string
                in: query
            -
                name: username
                description: ''
                schema:
                    type: string
                in: query
    '/user/{username}/{password}':
        get:
            tags:
                - username
                - password
                - _id
            parameters:
                -
                    name: username
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: password
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                _id:
                                    value: |-
                                        {
                                            _id:"afgwoebqdfnuwuihf5un3"
                                        }
                    description: Deliveres a _id back to the frontend
                '400':
                    description: Failed to retieve userdata
        operationId: getUser
        summary: Übergibt den Usernamen und Passwort und liefert eine Id zurück
components:
    schemas:
        HATEOAS_Collection:
            title: HATEOAS-Links einer Collection
            type: object
            properties:
                _name:
                    type: string
                query:
                    $ref: '#/components/schemas/HATEOAS_Link'
                create:
                    $ref: '#/components/schemas/HATEOAS_Link'
        HATEOAS_Link:
            title: HATEOAS-Link
            type: object
            properties:
                url:
                    type: string
                method:
                    type: string
                query_params:
                    type: array
                    items:
                        type: string
        User:
            description: |-
                Ein User hat einen Username und ein passwort mit dem er sich anmelden kann
                    Jeder user besitzt eine zusammenfassende Statistik die alle Steuerjahre und 
                    alle Verdienste zusammenfassen kann.
                    Ein User besitzt beliebig viele Steuerjahre in denen für das entsprechende Jahr
                    die Werbungskosten eingetragen werden können.
                    Ein User besitzt beliebig viele Verdienste die er zusammenfassend für jedes Jahr
                    eintragen kann.
            required: []
            type: object
            properties:
                username:
                    description: name der vom User zur anmeldung angelegt wurde
                    type: string
                password:
                    description: passwort um sich mit dem username anmelden zu können
                    type: string
                _id:
                    description: the Id of an user in mongo db
                    type: string
                _links:
                            $ref: '#/components/schemas/HATEOAS_Link'
            example: |-
                {
                    "_id": "wHFBHLWlhfwbffbssu56ug"
                    "username": "MaxMustermann",
                    "password": "geheimesPasswort"
                }
        HATEOAS_Resource:
            title: HATEOAS-Links einer Resource
            type: object
            properties:
                read:
                    $ref: '#/components/schemas/HATEOAS_Link'
                update:
                    $ref: '#/components/schemas/HATEOAS_Link'
                patch:
                    $ref: '#/components/schemas/HATEOAS_Link'
